name: Clovis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v3

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Check Code Formatting
      run: |
        clang-format --version
        find src -name '*.cpp' -o -name '*.h' | xargs clang-format -n -Werror --style=file

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Bench
      if: matrix.os == 'ubuntu-latest'
      working-directory: ./build
      run: | 
        expected=$(git show --summary | grep -Po 'bench:\s*\K[0-9]+')
        ./Clovis bench > output
        actual=$(grep -Po 'bench:\s*\K[0-9]+' output)
        if [[ "$expected" != "$actual" ]]; then
          echo "Values did not match. actual: '$actual' expected: '$expected'"
          exit 1
        fi

    - name: Archive Output
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: bench-output
        path: output

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
